library(factoextra)
library(FactoMineR)
library(ggplot2)
library(viridis)
library(ggforce)

# Load data and set proper classes for data
clus <- read.csv(file="completekmc.csv", header = TRUE)
clus$ClusterNumber <- as.factor(clus$ClusterNumber)
clus$Season <- as.factor(clus$Season)

# PCA for the graphs
gen.pca <- PCA(clus[,1:25], graph = FALSE)

# Correlation Circle
corrcircle <- fviz_pca_var(gen.pca, col.var="contrib",
             repel = TRUE,
             max.overlaps = 1) +
  scale_color_viridis(end = 0.9,
    option = "A")

# Contributions of variables to PC1
a <- fviz_contrib(gen.pca, 
             choice = "var", 
             axes = 1, 
             top = 25, 
             fill = "Grey") +
  ggtitle(label = "Contributions to the First Principal Component")

# Contributions of variables to PC2
b <- fviz_contrib(gen.pca, 
             choice = "var", 
             axes = 2, 
             top = 25, 
             fill = "Grey") +
  ggtitle(label = "Contributions to the Second Principal Component")

c <- fviz_contrib(gen.pca, 
             choice = "var", 
             axes = 3, 
             top = 25, 
             fill = "Grey") +
  ggtitle(label = "Contributions to the Third Principal Component")

d <- fviz_contrib(gen.pca, 
             choice = "var", 
             axes = 4, 
             top = 25, 
             fill = "Grey") +
  ggtitle(label = "Contributions to the Fourth Principal Component")

# you might wonder why I used two different functions for the same thing? PCA was giving me an error and I was too lazy to figure out why I just switched it to princomp
# don't @ me
sc.pca <- princomp(clus[,1:25])
sc.df <- as.data.frame(sc.pca$x)
labels <- clus[,26:27]
sc <- cbind(sc.df, labels)

# Seasonal plot
seasp <- ggplot(sc) + 
   geom_point(aes(x=PC1, y=PC2, 
                 shape = Season, 
                 color = ClusterNumber), 
             size=1.5, 
             show.legend = TRUE) +
  geom_mark_ellipse(aes(x = PC1, y = PC2, 
                        fill = Season, 
                        label = Season),
                    colour = "black",
                    show.legend = FALSE) +
  scale_color_viridis(begin = 0.1,
                      end = 0.9,
                      discrete = TRUE,
                      option = "A") +
  theme(legend.position = 'none') +
  xlab("First Principal Component") +
  ylab("Second Principal Component") +
  theme_classic()

# Cluster plot
clusp <- ggplot(sc) + 
   geom_point(aes(x=PC1, y=PC2, 
                 color = ClusterNumber), 
             size=1.5, 
             show.legend = TRUE) +
  geom_mark_ellipse(aes(x = PC1, y = PC2, 
                        fill = ClusterNumber, 
                        label = ClusterNumber),
                    colour = "black",
                    show.legend = FALSE) +
  scale_color_viridis(begin = 0.1,
                      end = 0.9,
                      discrete = TRUE,
                      option = "A") +
  theme(legend.position = 'none') +
  xlab("First Principal Component") +
  ylab("Second Principal Component") +
  theme_classic()

grid.arrange(a, b, c, d, nrow=2)
grid.arrange(clusp, corrcircle, seasp, nrow = 2)



library(corrplot)
corr <- read.csv(file = "clustercorr.csv", header = TRUE)
M <- cor(corr)
col1 <- colorRampPalette(magma(n = 100))
corrplot(M, method = "color", 
         order = "hclust", 
         addrect = 3, 
         col = colorRampPalette(magma(n=10))(100), 
         addCoef.col = "BLACK")
